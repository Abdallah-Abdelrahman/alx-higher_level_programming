======================
How to use add_integer
======================

Numbers
=======

``add_integer`` returns the sum of 2 numbers float or int
>>> import sys
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 1)
3
>>> add_integer(2, 3)
5
>>> add_integer(0.5, 3)
3
>>> add_integer(0.5, 0.2)
0
>>> add_integer(1)
99

Non-numbers
===========

>>> add_integer(2, '3')
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(2, None)
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer([])
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer((), ())
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(sys.float_info.max, sys.float_info.max)
359538626972463141629054847463408713596141135051689993197834953606314521560057077521179117265533756343080917907028764928468642653778928365536935093407075033972099821153102564152490980180778657888151737016910267884609166473806445896331617118664246696549595652408289446337476354361838599762500808052368249716736
>>> add_integer(float('nan'), 1)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
